import { FormControlLabel, Checkbox, FormLabel, TextField } from '@mui/material';
import React, { useState } from 'react';
import Box from '@mui/material/Box';
import axios from 'axios';
import {useNavigate} from 'react-router-dom';
import './Forms.css';
import {jsPDF} from "jspdf";
import InventoryHeader from "./InventoryMainHeader";
import Swal from 'sweetalert2';

const OrderStocks = () => {
  const history = useNavigate();
  const[inputs,setInputs] = useState({
        orderNo:'',
        stockItem:'',
        description:'',
        quantity:'',
        supplierID:'',
        supplierContact:'',
        orderedDate:'',
        expectedDate:''
  });

  const [checked, setChecked] = useState(false);
  const handleChange = (event) => {
    const { name, value } = event.target;
    
    setInputs(inputs => ({ ...inputs, [name]: value }));
  };
  
  const sendRequest = async() =>{
    await axios.post("http://localhost:5000/stocks", {
        orderNo: String(inputs.orderNo),
        stockItem:String(inputs.stockItem),
        description:String(inputs.description),
        quantity:Number(inputs.quantity),
        supplierID:String(inputs.supplierID),
        supplierContact:String(inputs.supplierID),
        orderedDate:Date(inputs.orderedDate),
        expectedDate:Date(inputs.expectedDate),
        condition: Boolean(checked)     
    }).then(res=>res.data);
  }

  const handleSubmit = (e) => {
    e.preventDefault();
    //validating contact number field
    if (inputs.supplierContact.length !== 12 || !inputs.supplierContact.startsWith("+94")) {
      Swal.fire({
        icon: 'error',
        title: 'Contact Number Invalid !',
      });
      return;
    }
    console.log(inputs);
    sendRequest().then(() => history('/ViewStocks'));

    //configuring automated whatsapp message
    const message = `*Order DetailsðŸ§¾*
    %0aOrder Number: ${inputs.orderNo}
    %0aSupplier ID: ${inputs.supplierID}
    %0aStock Item: ${inputs.stockItem}
    %0aDescription: ${inputs.description}
    %0aQuantity: ${inputs.quantity}
    %0aOrdered Date: ${inputs.orderedDate}
    %0aExpected Date: ${inputs.expectedDate}
    %0a*District General Hospital, Gampaha.*
    %0a_This is an autogenerated message. Do not reply._`;

    const messageLink = `https://web.whatsapp.com/send?phone=${inputs.supplierContact}&text=${message}&app_absent=0`;
    window.open(messageLink, "_blank");

    //printing report content
    if (checked) {
      const doc = new jsPDF();
      
      // Set font style
      doc.setFont("Helvetica", "bold");
      
      // Add report title
      doc.setTextColor("#007bff");
      doc.setFontSize(24);
      doc.text("Transaction Report", 105, 20, { align: "center" });

      const imgData = 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/5f/Emblem_of_Sri_Lanka.svg/1200px-Emblem_of_Sri_Lanka.svg.png';
      doc.addImage(imgData, 'PNG', 40, 14, 11.8, 16);

      doc.setTextColor("black");
      
      // Add report subtitle
      doc.setFontSize(14);
      doc.text("District General Hospital, Gampaha.", 105, 30, { align: "center" });
      
      // Add report details
      doc.setFontSize(12);
      doc.setFont("Helvetica", "normal");
      doc.text("Order Number:", 20, 50);
      doc.text(inputs.orderNo, 60, 50);
      
      doc.text("Supplier ID:", 20, 60);
      doc.text(inputs.supplierID, 60, 60);
      
      doc.text("Stock Item:", 20, 70);
      doc.text(inputs.stockItem, 60, 70);
      
      doc.text("Description:", 20, 80);
      doc.text(inputs.description, 60, 80);
      
      doc.text("Quantity:", 20, 90);
      doc.text(inputs.quantity, 60, 90);
      
      doc.text("Ordered Date:", 20, 100);
      doc.text(inputs.orderedDate, 60, 100);
      
      doc.text("Expected Date:", 20, 110);
      doc.text(inputs.expectedDate, 60, 110);
      
      const currentDate = new Date();
      const fileName = `Transaction_Report ${currentDate.getFullYear()}-${currentDate.getMonth() + 1}-${currentDate.getDate()}.pdf`;
      doc.save(fileName);
    }
  };

  return (
    <div>
      <InventoryHeader/>
      <h2 className='in-heading'>Order Stocks</h2>
      <form className='in-form-all' onSubmit={handleSubmit} autoComplete="off">
      <div className='in-form'>
      <Box 
          display={"flex"}
          flexDirection = {"column"}
          justifyContent={"center"} 
          maxWidth={700} 
          alignContent={"center"} 
          marginLeft={"auto"}
          marginRight={"auto"} 
          marginTop={5}>
        
        <FormLabel style={{paddingRight: 580}}>Order Number :</FormLabel>
        <TextField value={inputs.orderNo} onChange={handleChange} margin = "normal" fullWidth variant="outlined" name="orderNo" required="true" placeholder="Enter order number here"/><br/>

        <FormLabel style={{paddingRight: 560}}>Stock Item Name :</FormLabel>
        <TextField value={inputs.stockItem} onChange={handleChange} margin = "normal" fullWidth variant="outlined" name="stockItem" required="true" placeholder="Enter stock item name here"/><br/>

        <FormLabel style={{paddingRight: 600}}>Description :</FormLabel>
        <TextField value={inputs.description} onChange={handleChange}  margin = "normal" fullWidth variant="outlined" name="description" required="true" placeholder="Enter stock description here"/><br/>

        <FormLabel style={{paddingRight: 625}}>Quantity :</FormLabel>
        <TextField type="number" value={inputs.quantity} onChange={handleChange}  margin = "normal" fullWidth variant="outlined" name="quantity" required="true" placeholder="Enter quantity here"/><br/>

        <FormLabel style={{paddingRight: 605}}>Supplier ID :</FormLabel>
        <TextField value={inputs.supplierID} onChange={handleChange}  margin = "normal" fullWidth variant="outlined" name="supplierID" required="true" placeholder="Enter supplier ID here"/><br/>

        <FormLabel style={{paddingRight: 500}}>Supplier Contact Number :</FormLabel>
        <TextField value={inputs.supplierContact} onChange={handleChange}  margin = "normal" fullWidth variant="outlined" name="supplierContact" required="true" placeholder="+94(XXXXXXXXX)"/><br/>

        <FormLabel style={{paddingRight: 590}}>Ordered Date :</FormLabel>
        <TextField type="date" value={inputs.orderedDate} onChange={handleChange}  margin = "normal" fullWidth variant="outlined" name="orderedDate" required="true" inputProps={{ style: { textTransform: "none" } }}/><br/>

        <FormLabel style={{paddingRight: 580}}>Expected Date :</FormLabel>
        <TextField type="date" value={inputs.expectedDate} onChange={handleChange}  margin = "normal" fullWidth variant="outlined" name="expectedDate" required="true" inputProps={{ style: { textTransform: "none" } }}/><br/>

        <FormControlLabel style={{paddingRight: 430}} control={<Checkbox  checked={checked} onChange={(e) => setChecked(e.target.checked)}/>} label="Generate the purchase report"/><br/>

        <div className='dadd-b'>
          <button className='dadd-button-24' >Confirm Order</button>
        </div><br/>

      </Box>
      </div>
    </form>
    </div>
  )
}

export default OrderStocks;